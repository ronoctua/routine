### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

type Connections {
  city: String
  country: String
  createdAt: DateTime!
  ipAddress: String!
  latitude: Float
  longitude: Float
  owner: User!
  ownerId: String!
  region: String
  token: String!
  updatedAt: DateTime!
  userAgent: String
}

type CreateChecklistItemContentReturn {
  content: String!
  contentType: String!
  id: String!
  isArchived: Boolean!
  isDone: Boolean!
  label: String!
  priority: Int
  tags: [String]
}

type CreateChecklistItemReturn {
  category: String!
  item: CreateChecklistItemContentReturn
  itemId: String!
  itemOrder: Float!
}

type CreateUserReturn {
  authId: String!
  email: String!
  groups: [Group!]!
  id: String!
  nickname: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

type DeleteChecklistItemContentReturn {
  content: String!
  contentType: String!
  id: String!
  isArchived: Boolean!
  isDone: Boolean!
  label: String!
  priority: Int
  tags: [String]
}

type DeleteChecklistItemReturn {
  category: String!
  item: DeleteChecklistItemContentReturn
  itemId: String!
  itemOrder: Float!
}

enum Group {
  ADMIN
  BOT
  CHECKLIST
  DEVELOPER
  EXPERIMENTAL
  MAINTAINER
  USER
}

type Item {
  actionOnDone: String!
  content: String!
  contentType: String!
  createdAt: DateTime!
  endDate: String
  endTime: String
  id: ID!
  isActive: Boolean!
  isAllDay: Boolean!
  isArchived: Boolean!
  isDone: Boolean!
  isPrivate: Boolean!
  isReminder: Boolean!
  isTask: Boolean!
  label: String!
  latitude: Float
  location: String
  owners: [UsersOnItems!]!
  priority: Int
  recurrence: String
  startDate: String
  startTime: String
  status: String
  tags: [String!]!
  timeZone: String
  updatedAt: DateTime!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type LastConnections {
  city: String
  country: String
  createdAt: DateTime!
  ipAddress: String!
  latitude: Float
  longitude: Float
  owner: User!
  ownerId: String!
  region: String
  token: String!
  updatedAt: DateTime!
  userAgent: String
}

type Mutation {
  createChecklistItem(content: String!, itemOrder: Float!): CreateChecklistItemReturn!
  createUser(authId: String!, email: String!, groups: [Group!]!, id: String!, nickname: String!, password: String!): CreateUserReturn!
  deleteChecklistItem(itemId: String!): DeleteChecklistItemReturn!
  updateChecklistItem(content: String!, isDone: Boolean!, itemId: String!, itemOrder: Float!): UpdateChecklistItemReturn!
}

type Query {
  """Get data from the current logged user."""
  user: UserReturn

  """List all users."""
  users: [UsersReturn]
}

type Score {
  category: String!
  date: String!
  extraData: Json
  id: ID!
  note: String
  owner: User!
  ownerId: String!
  percentages: Json
  totalPercentage: Int!
}

type UpdateChecklistItemContentReturn {
  content: String!
  contentType: String!
  id: String!
  isArchived: Boolean!
  isDone: Boolean!
  label: String!
  priority: Int
  tags: [String]
}

type UpdateChecklistItemReturn {
  category: String!
  item: UpdateChecklistItemContentReturn
  itemId: String!
  itemOrder: Float!
}

type User {
  connections: [Connections!]!
  email: String!
  groups: [Group!]!
  id: ID!
  items: [UsersOnItems!]!
  lastConnections: [LastConnections!]!
  nickname: String!
  scores: [Score!]!
}

type UserItemContentReturn {
  content: String!
  contentType: String!
  id: String!
  isArchived: Boolean!
  isDone: Boolean!
  label: String!
  priority: Int
  tags: [String]
}

type UserItemsReturn {
  category: String!
  item: UserItemContentReturn!
  itemId: String!
  itemOrder: Float!
}

type UserReturn {
  groups: [String]!
  items: [UserItemsReturn]
  nickname: String!
}

type UsersOnItems {
  assignedAt: DateTime!
  category: String!
  item: Item!
  itemId: String!
  itemOrder: Float!
  notificationDate: String
  user: User!
  userId: String!
}

type UsersReturn {
  groups: [String]!
  nickname: String!
}